!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,r,i,n,o){e(this,"isLiked",(()=>this._likes.some((e=>e._id===this._userId)))),e(this,"deleteCard",(()=>{this._element.remove(),this._element=null})),this._data=t,this._name=t.name,this._link=t.link,this._likes=t.likes,this._id=t._id,this._userId=s,this._cardSelector=r,this._handleLike=n,this._handleDelete=o,this._handleCardClick=i}getId(){return this._id}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".grid__card").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return e.style.backgroundImage="url(".concat(this._link,")"),t.textContent=this._name,this._renderLikes(),this._element}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLike(this._id))),this._element.querySelector(".card__delete").addEventListener("click",(()=>this._handleDelete(this._id))),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick()}))}setLikes(e){this._likes=e,this._renderLikes()}_renderLikes(){const e=this._element.querySelector(".card__like-button");this._element.querySelector(".card__like-counter").textContent=this._likes.length,this.isLiked()?e.classList.add("card__like_active"):e.classList.remove("card__like_active")}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var r=class{constructor(e,t){s(this,"_showInputError",((e,t)=>{const s=this._element.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)})),s(this,"_hideInputError",(e=>{const t=this._element.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._inputErrorClass),t.textContent=""})),s(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),s(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)})),this._inputSelector=e.inputSelector,this._fieldsetSelector=e.fieldsetSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t,this._inputList=Array.from(t.querySelectorAll(this._inputSelector)),this._buttonElement=t.querySelector(this._submitButtonSelector)}resetValidationError(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}};class i{constructor(e){var t,s;s=e=>{e.target===e.currentTarget&&this.close(e.target)},(t="_handleLayoverClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this),this._handleLayoverClose=this._handleLayoverClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_enabled"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleLayoverClose)}close(){this._popupElement.classList.remove("popup_enabled"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleLayoverClose)}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("popup__close")&&this.close()}))}}class n extends i{constructor(e,t){let{handleFormSubmit:s,buttonText:r,loadingButtonText:i}=t;super(e),this._handleFormSubmit=s,this._formElement=this._popupElement.querySelector(".popup__form"),this._inputList=this._formElement.querySelectorAll(".form__input"),this._loadingButtonText=i,this._submitButton=this._formElement.querySelector(".form__button")}_getInputValues(){const e={};return this._inputList.forEach((t=>{const s=t.id,r=t.value;e[s]=r})),e}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}showLoading(){this._submitButton.textContent="Loading..."}hideLoading(){this._submitButton.textContent="Save"}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._formElement.reset()}}document.querySelector(".profile__name"),document.querySelector(".profile__category"),document.querySelector(".profile__picture");const o=document.querySelector(".profile__picture-overlay"),l=document.querySelector(".image"),a=(document.getElementById("title"),document.getElementById("link"),document.querySelector(".grid__cards"),document.querySelector(".profile__edit-button")),c=(document.querySelector(".edit__close"),document.querySelector(".edit")),d=(document.getElementById("editForm"),document.querySelector(".avatar")),u=document.querySelector("#edit"),h=document.querySelector("#add"),_=document.querySelector("#avatar"),m=document.querySelector("#delete"),p=document.getElementById("name"),f=document.getElementById("category"),E=document.getElementById("avatarInput"),g=document.querySelector(".profile__add-button"),y=(document.querySelector(".add__close"),document.querySelector(".add")),v=(document.getElementById("addForm"),document.querySelector(".form__button"),{formSelector:".form",inputSelector:".form__input",fieldsetSelector:".form__fieldset",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}),b=new class{constructor(e){let{baseUrl:t,headers:s}=e;var r,i;i=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Something went wrong: ".concat(e.status)))),(r="fetcher")in this?Object.defineProperty(this,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[r]=i,this._baseUrl=t,this._headers=s}getUserInfo(){return fetcher("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}editProfile(e){return fetcher("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})})}editProfilePic(e){return fetcher("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.picture})})}getInitialCards(){return fetcher("".concat(this._baseUrl,"/cards"),{headers:this._headers})}createCard(e){return fetcher("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})})}likeCard(e){return fetcher("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers})}unlikeCard(e){return fetcher("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers})}deleteCard(e){return fetcher("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"b451294b-44d9-464a-8874-2d4137a4eb3c","Content-Type":"application/json"}});let L;const S=new class{constructor(e){let{fullName:t,category:s,profilePic:r}=e;this._fullName=document.querySelector(t),this._category=document.querySelector(s),this._profilePic=document.querySelector(r)}getUserInfo(){return{name:this._fullName.textContent,description:this._category.textContent,picture:this._profilePic.src}}setUserInfo(e,t){this._fullName.textContent=e,this._category.textContent=t}setUserImage(e){this._profilePic.src=e}}({fullName:".profile__name",category:".profile__category",profilePic:".profile__picture"});Promise.all([b.getUserInfo(),b.getInitialCards()]).then((e=>{let[t,s]=e;L=t.id,S.setUserInfo(t.name,t.about),S.setUserImage(t.avatar),C.renderItems(s)})).catch((e=>{console.log(e)}));const C=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}}({renderer:P},".grid__cards"),k=new n(u,(e=>{k.showLoading(),b.editProfile(e.name,e.description).then((t=>{S.setUserInfo(t.name,e.description)})).catch((e=>{console.log(e)})).finally((()=>{k.hideLoading()}))}));k.setEventListeners();const I=new n(h,(e=>{I.showLoading(),b.createCard(e).then((e=>{const t=P(e);C.prepend(t),I.close(),y.reset(),y.resetValidationError()})).catch((e=>{console.log(e)})).finally((()=>{I.hideLoading()}))}));I.setEventListeners();const q=new class extends i{constructor(e){super(e),this._imageTitle=this._popupElement.querySelector(".image__title"),this._imagePreview=this._popupElement.querySelector(".image__file")}open(e,t){super.open(),this._imagePreview.src=t,this._imagePreview.alt=e,this._imageTitle.textContent=e}}(l);q.setEventListeners();const w=new n(_,(e=>{w.showLoading(),b.editProfilePic(e.picture).then((e=>{S.setUserImage(e.picture)})).catch((e=>{console.log(e)})).finally((()=>{w.hideLoading()}))}));w.setEventListeners();const B=new class extends i{constructor(e){super(e),this._formElement=this._popupElement.querySelector(".popup__form"),this._submitButton=this._popupElement.querySelector("#submitButton"),this._text=this._submitButton.textContent}setAction(e){this._handleSubmit=e}setEventListeners(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()})),super.setEventListeners()}}(m);function P(e){const s=new t(e,L,"#card",(()=>{q.open(e.name,e.link)}),(()=>{s.isLiked()?b.unlikeCard(s.getId()).then((t=>{e.setLikes(t.likes)})):b.likeCard(s.getId()).then((t=>{e.setLikes(t.likes)}))}),(()=>{B.open(),B.setAction((()=>{b.deleteCard(s.getId()).then((()=>{s.deleteCard(),B.close()})).catch((e=>{console.log(e)})).finally((()=>{B.close()}))}))}));return s.generateCard()}B.setEventListeners(),a.addEventListener("click",(function(){const e=S.getUserInfo();p.value=e.name,f.value=e.description,U.resetValidationError(),k.open()})),g.addEventListener("click",(()=>{x.resetValidationError(),I.open()})),o.addEventListener("click",(function(){const e=S.getUserInfo();E.value=e.picture,T.resetValidationError(),w.open()}));const U=new r(v,c),x=new r(v,y),T=new r(v,d);U.enableValidation(),x.enableValidation(),T.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,