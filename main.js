!function(){"use strict";function e(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class t{constructor(t,s,n){e(this,"_pressLike",(e=>{e.target.classList.toggle("card__like_active")})),e(this,"_pressDelete",(()=>{this._element.remove(),this._element=null})),this._title=t.title,this._link=t.link,this._cardSelector=s,this._handleCardClick=n}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".grid__card").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return e.style.backgroundImage="url(".concat(this._link,")"),t.textContent=this._title,this._element}_setEventListeners(){this._element.querySelector(".card__like").addEventListener("click",this._pressLike),this._element.querySelector(".card__delete").addEventListener("click",this._pressDelete),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick()}))}}function s(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var n=class{constructor(e,t){s(this,"_showInputError",((e,t)=>{const s=this._element.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)})),s(this,"_hideInputError",(e=>{const t=this._element.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._inputErrorClass),t.textContent=""})),s(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),s(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)})),this._inputSelector=e.inputSelector,this._fieldsetSelector=e.fieldsetSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t,this._inputList=Array.from(t.querySelectorAll(this._inputSelector)),this._buttonElement=t.querySelector(this._submitButtonSelector)}resetValidationError(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}};class r{constructor(e){var t,s;s=e=>{e.target===e.currentTarget&&this.close(e.target)},(t="_handleLayoverClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this),this._handleLayoverClose=this._handleLayoverClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_enabled"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleLayoverClose)}close(){this._popupElement.classList.remove("popup_enabled"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleLayoverClose)}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("popup__close")&&this.close()}))}}class i extends r{constructor(e,t){super(e),this._handleFormSubmit=t,this._formElement=this._popupElement.querySelector(".popup__form"),this._inputList=this._formElement.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{const s=t.id,n=t.value;e[s]=n})),e}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._formElement.reset()}}const o=(e,t)=>{fetch(e,t).then((e=>{if(e.ok)return e.json();Promise.reject("Error: ".concat(e.status))}))};document.querySelector(".profile__name"),document.querySelector(".profile__category");const l=document.querySelector(".image"),a=(document.getElementById("title"),document.getElementById("link"),document.querySelector(".grid__cards"),document.querySelector(".profile__edit-button")),c=(document.querySelector(".edit__close"),document.querySelector(".edit")),u=(document.getElementById("editForm"),document.querySelector("#edit")),d=document.querySelector("#add"),_=document.getElementById("name"),h=document.getElementById("category"),m=document.querySelector(".profile__add-button"),p=(document.querySelector(".add__close"),document.querySelector(".add")),E=(document.getElementById("addForm"),document.querySelector(".form__button"),{formSelector:".form",inputSelector:".form__input",fieldsetSelector:".form__fieldset",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}),y=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return o("".concat(this._baseUrl,"/cards"),{headers:this._headers})}getUserInfo(){return o("".concat(this._baseUrl,"/me"),{headers:this._headers})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"b451294b-44d9-464a-8874-2d4137a4eb3c","Content-Type":"application/json"}});y.getInitialCards().then((e=>{g.renderItems(e)})).catch((e=>{console.log(e)})),y.getUserInfo().then((e=>{L.setUserInfo({name:e.name,description:e.about})})).then((e=>{L.setUserImage({picture:e.avatar})})).catch((e=>{console.log(e)}));const g=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(){this._items.forEach((e=>{this.addItem(e)}))}}({items:[{title:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{title:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{title:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{title:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{title:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{title:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:function(e){return new t(e,"#card",(()=>{b.open(e.title,e.link)})).generateCard()}},".grid__cards");g.renderItems();const v=new i(u,(e=>{L.setUserInfo(e.name,e.description),v.close()}));v.setEventListeners();const f=new i(d,(e=>{const t={title:e.title,link:e.link};g.addItem(t),f.close()}));f.setEventListeners();const b=new class extends r{constructor(e){super(e),this._imageTitle=this._popupElement.querySelector(".image__title"),this._imagePreview=this._popupElement.querySelector(".image__file")}open(e,t){super.open(),this._imagePreview.src=t,this._imagePreview.alt=e,this._imageTitle.textContent=e}}(l);b.setEventListeners();const L=new class{constructor(e){let{fullName:t,category:s,profilePic:n}=e;this._fullName=document.querySelector(t),this._category=document.querySelector(s),this._profilePic=document.querySelector(n)}getUserInfo(){return{name:this._fullName.textContent,description:this._category.textContent,picture:this._profilePic.src}}setUserInfo(e,t){this._fullName.textContent=e,this._category.textContent=t}setUserImage(e){this._profilePic.src=e}}({fullName:".profile__name",category:".profile__category",profilePic:".profile__picture"});a.addEventListener("click",(function(){const e=L.getUserInfo();_.value=e.name,h.value=e.description,S.resetValidationError(),v.open()})),m.addEventListener("click",(()=>{C.resetValidationError(),f.open()}));const S=new n(E,c),C=new n(E,p);S.enableValidation(),C.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,