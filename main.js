!function(){"use strict";function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}class t{constructor(t,r,s){e(this,"_pressLike",(e=>{e.target.classList.toggle("card__like_active")})),e(this,"_pressDelete",(()=>{this._element.remove(),this._element=null})),this._data=t,this._title=t.title,this._link=t.link,this._cardSelector=r,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".grid__card").cloneNode(!0)}generateCard(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return e.style.backgroundImage="url(".concat(this._link,")"),t.textContent=this._title,this._element}_setEventListeners(){this._element.querySelector(".card__like").addEventListener("click",this._pressLike),this._element.querySelector(".card__delete").addEventListener("click",this._pressDelete),this._element.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick()}))}}function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var s=class{constructor(e,t){r(this,"_showInputError",((e,t)=>{const r=this._element.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),r.textContent=t,r.classList.add(this._errorClass)})),r(this,"_hideInputError",(e=>{const t=this._element.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._inputErrorClass),t.textContent=""})),r(this,"_checkInputValidity",(e=>{e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)})),r(this,"_toggleButtonState",(()=>{this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)})),this._inputSelector=e.inputSelector,this._fieldsetSelector=e.fieldsetSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._element=t,this._inputList=Array.from(t.querySelectorAll(this._inputSelector)),this._buttonElement=t.querySelector(this._submitButtonSelector)}resetValidationError(){this._inputList.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState()}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._element.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}};class n{constructor(e){var t,r;r=e=>{e.target===e.currentTarget&&this.close(e.target)},(t="_handleLayoverClose")in this?Object.defineProperty(this,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[t]=r,this._popupElement=e,this._handleEscClose=this._handleEscClose.bind(this),this._handleLayoverClose=this._handleLayoverClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_enabled"),document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("mousedown",this._handleLayoverClose)}close(){this._popupElement.classList.remove("popup_enabled"),document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("mousedown",this._handleLayoverClose)}setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("popup__close")&&this.close()}))}}class i extends n{constructor(e,t){super(e),this._handleFormSubmit=t,this._formElement=this._popupElement.querySelector(".popup__form"),this._inputList=this._formElement.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._inputList.forEach((t=>{const r=t.id,s=t.value;e[r]=s})),e}setEventListeners(){super.setEventListeners(),this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}setInputValues(e){this._inputs.forEach((t=>{t.value=e[t.name]}))}close(){super.close(),this._formElement.reset()}}const o=(e,t)=>fetch(e,t).then((e=>e.ok?e.json():Promise.reject("Something went wrong: ".concat(e.status))));document.querySelector(".profile__name"),document.querySelector(".profile__category");const l=document.querySelector(".profile__picture"),a=document.querySelector(".image"),c=(document.getElementById("title"),document.getElementById("link"),document.querySelector(".grid__cards"),document.querySelector(".profile__edit-button")),u=(document.querySelector(".edit__close"),document.querySelector(".edit")),d=(document.getElementById("editForm"),document.querySelector(".avatar")),_=document.querySelector("#edit"),h=document.querySelector("#add"),m=document.querySelector("#avatar"),p=document.getElementById("name"),E=document.getElementById("category"),v=document.getElementById("avatar"),f=document.querySelector(".profile__add-button"),y=(document.querySelector(".add__close"),document.querySelector(".add")),g=(document.getElementById("addForm"),document.querySelector(".form__button"),{formSelector:".form",inputSelector:".form__input",fieldsetSelector:".form__fieldset",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"}),S=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getInitialCards(){return o("".concat(this._baseUrl,"/cards"),{headers:this._headers})}addCard(e){return o("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})})}getUserInfo(){return o("".concat(this._baseUrl,"/users/me"),{headers:this._headers})}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"b451294b-44d9-464a-8874-2d4137a4eb3c","Content-Type":"application/json"}});let b;Promise.all([S.getUserInfo(),S.getInitialCards()]).then((e=>{let[t,r]=e;b=r.id,w.setUserInfo(r.name,r.about),w.setUserImage(r.avatar),L.renderItems(t)})).catch((e=>{console.log(e)}));const L=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}addItem(e){const t=this._renderer(e);this._container.prepend(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}}({renderer:function(e){return new t(e,"#card",(()=>{q.open(e.title,e.link)})).generateCard()}},".grid__cards");L.renderItems();const C=new i(_,(e=>{w.setUserInfo(e.name,e.description),C.close()}));C.setEventListeners();const I=new i(h,(e=>{const t={title:e.title,link:e.link};L.addItem(t),I.close()}));I.setEventListeners();const q=new class extends n{constructor(e){super(e),this._imageTitle=this._popupElement.querySelector(".image__title"),this._imagePreview=this._popupElement.querySelector(".image__file")}open(e,t){super.open(),this._imagePreview.src=t,this._imagePreview.alt=e,this._imageTitle.textContent=e}}(a);q.setEventListeners();const k=new i(m,(e=>{w.setUserImage(e.picture),k.close()}));k.setEventListeners();const w=new class{constructor(e){let{fullName:t,category:r,profilePic:s}=e;this._fullName=document.querySelector(t),this._category=document.querySelector(r),this._profilePic=document.querySelector(s)}getUserInfo(){return{name:this._fullName.textContent,description:this._category.textContent,picture:this._profilePic.src}}setUserInfo(e,t){this._fullName.textContent=e,this._category.textContent=t}setUserImage(e){this._profilePic.src=e}}({fullName:".profile__name",category:".profile__category",profilePic:".profile__picture"});c.addEventListener("click",(function(){const e=w.getUserInfo();p.value=e.name,E.value=e.description,B.resetValidationError(),C.open()})),f.addEventListener("click",(()=>{U.resetValidationError(),I.open()})),l.addEventListener("click",(function(){const e=w.getUserInfo();v.value=e.picture,P.resetValidationError(),k.open()}));const B=new s(g,u),U=new s(g,y),P=new s(g,d);B.enableValidation(),U.enableValidation(),P.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,